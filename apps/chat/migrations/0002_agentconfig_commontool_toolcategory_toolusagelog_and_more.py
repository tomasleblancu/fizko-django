# Generated by Django 4.2.11 on 2025-09-26 20:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("companies", "0002_backgroundtasktracker"),
        ("chat", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AgentConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nombre del Agente"),
                ),
                (
                    "agent_type",
                    models.CharField(
                        choices=[
                            ("sii", "Agente SII"),
                            ("dte", "Agente DTE"),
                            ("general", "Agente General"),
                            ("onboarding", "Agente Onboarding"),
                            ("supervisor", "Supervisor"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Agente",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("inactive", "Inactivo"),
                            ("testing", "En Pruebas"),
                        ],
                        default="active",
                        max_length=10,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        default="gpt-4.1-nano",
                        max_length=50,
                        verbose_name="Modelo de IA",
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(
                        default=0.3,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                        verbose_name="Temperatura",
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(
                        blank=True,
                        default=2000,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(8000),
                        ],
                        verbose_name="Máximo de Tokens",
                    ),
                ),
                (
                    "system_prompt",
                    models.TextField(
                        help_text="Instrucciones principales que definen el comportamiento del agente",
                        verbose_name="Prompt del Sistema",
                    ),
                ),
                (
                    "context_instructions",
                    models.TextField(
                        blank=True,
                        help_text="Instrucciones específicas sobre el contexto y situación",
                        null=True,
                        verbose_name="Instrucciones de Contexto",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "advanced_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuración adicional en formato JSON",
                        verbose_name="Configuración Avanzada",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_configs",
                        to="companies.company",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_agent_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Agente",
                "verbose_name_plural": "Configuraciones de Agentes",
                "ordering": ["agent_type", "name"],
                "unique_together": {("agent_type", "company")},
            },
        ),
        migrations.CreateModel(
            name="CommonTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "display_name",
                    models.CharField(max_length=200, verbose_name="Nombre a Mostrar"),
                ),
                ("description", models.TextField(verbose_name="Descripción")),
                (
                    "tool_type",
                    models.CharField(
                        choices=[
                            ("function", "Función Python"),
                            ("api", "API Externa"),
                            ("database", "Consulta Base de Datos"),
                            ("file", "Procesamiento de Archivos"),
                            ("calculation", "Cálculo"),
                            ("search", "Búsqueda"),
                            ("validation", "Validación"),
                            ("integration", "Integración"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Herramienta",
                    ),
                ),
                (
                    "function_path",
                    models.CharField(
                        help_text="Ruta completa a la función (ej: apps.chat.tools.search_documents)",
                        max_length=500,
                        verbose_name="Ruta de la Función",
                    ),
                ),
                (
                    "parameters_schema",
                    models.JSONField(
                        default=dict,
                        help_text="Definición JSON de los parámetros que acepta la herramienta",
                        verbose_name="Esquema de Parámetros",
                    ),
                ),
                (
                    "required_parameters",
                    models.JSONField(
                        default=list,
                        help_text="Lista de parámetros obligatorios",
                        verbose_name="Parámetros Requeridos",
                    ),
                ),
                (
                    "response_schema",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Formato esperado de la respuesta",
                        verbose_name="Esquema de Respuesta",
                    ),
                ),
                (
                    "requires_authentication",
                    models.BooleanField(
                        default=True, verbose_name="Requiere Autenticación"
                    ),
                ),
                (
                    "company_scope",
                    models.BooleanField(
                        default=True,
                        help_text="Si la herramienta debe estar limitada al contexto de la empresa",
                        verbose_name="Limitado por Empresa",
                    ),
                ),
                (
                    "allowed_roles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de roles que pueden usar esta herramienta",
                        verbose_name="Roles Permitidos",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activa")),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="Herramientas del sistema no pueden ser eliminadas",
                        verbose_name="Herramienta del Sistema",
                    ),
                ),
                (
                    "max_calls_per_session",
                    models.IntegerField(
                        default=100, verbose_name="Máximo de Llamadas por Sesión"
                    ),
                ),
                (
                    "usage_examples",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Ejemplos de cómo usar la herramienta",
                        verbose_name="Ejemplos de Uso",
                    ),
                ),
                (
                    "documentation_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="URL de Documentación"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "usage_count",
                    models.IntegerField(default=0, verbose_name="Contador de Uso"),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último Uso"
                    ),
                ),
            ],
            options={
                "verbose_name": "Herramienta Común",
                "verbose_name_plural": "Herramientas Comunes",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="ToolCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Nombre del icono (ej: database, search, calculator)",
                        max_length=50,
                        null=True,
                        verbose_name="Icono",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6B7280",
                        help_text="Color hexadecimal (ej: #3B82F6)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Categoría de Herramienta",
                "verbose_name_plural": "Categorías de Herramientas",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ToolUsageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(max_length=100, verbose_name="ID de Sesión"),
                ),
                (
                    "parameters_used",
                    models.JSONField(
                        default=dict, verbose_name="Parámetros Utilizados"
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Datos de Respuesta"
                    ),
                ),
                ("success", models.BooleanField(verbose_name="Exitoso")),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Mensaje de Error"
                    ),
                ),
                (
                    "execution_time_ms",
                    models.IntegerField(verbose_name="Tiempo de Ejecución (ms)"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Dirección IP"
                    ),
                ),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tool_usage_logs",
                        to="chat.agentconfig",
                    ),
                ),
                (
                    "common_tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="chat.commontool",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tool_usage_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Uso de Herramienta",
                "verbose_name_plural": "Logs de Uso de Herramientas",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="commontool",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="common_tools",
                to="chat.toolcategory",
            ),
        ),
        migrations.AddField(
            model_name="commontool",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_common_tools",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="AgentModelConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "top_p",
                    models.FloatField(
                        default=1.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="Top P",
                    ),
                ),
                (
                    "frequency_penalty",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(-2.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                        verbose_name="Penalización de Frecuencia",
                    ),
                ),
                (
                    "presence_penalty",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(-2.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                        verbose_name="Penalización de Presencia",
                    ),
                ),
                (
                    "stop_sequences",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de secuencias que detendrán la generación",
                        verbose_name="Secuencias de Parada",
                    ),
                ),
                (
                    "timeout_seconds",
                    models.IntegerField(
                        default=30,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Timeout (segundos)",
                    ),
                ),
                (
                    "max_retries",
                    models.IntegerField(
                        default=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Máximo de Reintentos",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent_config",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_config",
                        to="chat.agentconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Modelo",
                "verbose_name_plural": "Configuraciones de Modelos",
            },
        ),
        migrations.CreateModel(
            name="AgentVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "version_number",
                    models.CharField(max_length=20, verbose_name="Número de Versión"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descripción de Cambios"
                    ),
                ),
                (
                    "config_snapshot",
                    models.JSONField(verbose_name="Snapshot de Configuración"),
                ),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="Versión Actual"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="chat.agentconfig",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_versions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Versión de Configuración",
                "verbose_name_plural": "Versiones de Configuraciones",
                "ordering": ["-created_at"],
                "unique_together": {("agent_config", "version_number")},
            },
        ),
        migrations.CreateModel(
            name="AgentToolAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(default=True, verbose_name="Habilitada"),
                ),
                (
                    "custom_parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Parámetros específicos para este agente",
                        verbose_name="Parámetros Personalizados",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Orden de preferencia en caso de herramientas similares",
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "max_calls_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Anula el límite global para este agente",
                        null=True,
                        verbose_name="Límite de Llamadas (Override)",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tool_assignments",
                        to="chat.agentconfig",
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tool_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "common_tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_assignments",
                        to="chat.commontool",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asignación de Herramienta",
                "verbose_name_plural": "Asignaciones de Herramientas",
                "ordering": ["-priority", "common_tool__name"],
                "unique_together": {("agent_config", "common_tool")},
            },
        ),
        migrations.CreateModel(
            name="AgentTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tool_name",
                    models.CharField(
                        max_length=100, verbose_name="Nombre de la Herramienta"
                    ),
                ),
                (
                    "tool_function",
                    models.CharField(
                        help_text="Ruta completa a la función o clase (ej: apps.chat.services.tools.search_sii_faqs)",
                        max_length=200,
                        verbose_name="Función/Clase de la Herramienta",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("sii", "SII/FAQ"),
                            ("dte", "Documentos"),
                            ("company", "Empresa"),
                            ("analysis", "Análisis"),
                            ("general", "General"),
                            ("external", "Externa"),
                        ],
                        max_length=20,
                        verbose_name="Categoría",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "is_enabled",
                    models.BooleanField(default=True, verbose_name="Habilitada"),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Parámetros específicos de configuración para la herramienta",
                        verbose_name="Parámetros",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tools",
                        to="chat.agentconfig",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Herramienta de Agente",
                "verbose_name_plural": "Herramientas de Agentes",
                "ordering": ["category", "tool_name"],
                "unique_together": {("agent_config", "tool_name")},
            },
        ),
        migrations.CreateModel(
            name="AgentPrompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prompt_type",
                    models.CharField(
                        choices=[
                            ("system", "Sistema"),
                            ("context", "Contexto"),
                            ("instruction", "Instrucción"),
                            ("template", "Plantilla"),
                            ("fallback", "Respaldo"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Prompt",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nombre del Prompt"),
                ),
                ("content", models.TextField(verbose_name="Contenido del Prompt")),
                (
                    "variables",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de variables que pueden ser usadas en el prompt",
                        verbose_name="Variables Disponibles",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Orden de aplicación (mayor número = mayor prioridad)",
                        verbose_name="Prioridad",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prompts",
                        to="chat.agentconfig",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_prompts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Prompt de Agente",
                "verbose_name_plural": "Prompts de Agentes",
                "ordering": ["-priority", "prompt_type", "name"],
                "unique_together": {("agent_config", "prompt_type", "name")},
            },
        ),
    ]
