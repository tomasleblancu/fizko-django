# Generated by Django 4.2.11 on 2025-09-25 20:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0002_backgroundtasktracker"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tax_id",
                    models.CharField(
                        help_text="RUT con formato XX.XXX.XXX-X",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="RUT debe tener formato XX.XXX.XXX-X",
                                regex="^\\d{1,2}\\.\\d{3}\\.\\d{3}-[\\dkK]$",
                            )
                        ],
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Nombre o razón social del contacto",
                        max_length=255,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Email de contacto", max_length=254
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Teléfono de contacto", max_length=20
                    ),
                ),
                ("address", models.TextField(blank=True, help_text="Dirección")),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Categoría o tipo (ej: Servicios, Productos, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "is_client",
                    models.BooleanField(default=False, help_text="¿Es cliente?"),
                ),
                (
                    "is_provider",
                    models.BooleanField(default=False, help_text="¿Es proveedor?"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Contacto activo"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notas adicionales sobre el contacto"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa propietaria del contacto",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="companies.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contacto",
                "verbose_name_plural": "Contactos",
                "db_table": "contacts_contacts",
                "ordering": ["name", "tax_id"],
                "indexes": [
                    models.Index(
                        fields=["company", "is_active"],
                        name="contacts_co_company_adbdcf_idx",
                    ),
                    models.Index(
                        fields=["company", "is_client"],
                        name="contacts_co_company_fc939c_idx",
                    ),
                    models.Index(
                        fields=["company", "is_provider"],
                        name="contacts_co_company_ca3045_idx",
                    ),
                    models.Index(
                        fields=["tax_id"], name="contacts_co_tax_id_8b2c45_idx"
                    ),
                    models.Index(
                        fields=["category"], name="contacts_co_categor_fdab0e_idx"
                    ),
                ],
                "unique_together": {("company", "tax_id")},
            },
        ),
    ]
