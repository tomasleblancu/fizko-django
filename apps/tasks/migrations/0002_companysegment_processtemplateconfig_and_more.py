# Generated by Django 4.2.11 on 2025-10-02 01:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("tasks", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CompanySegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre del Segmento"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "segment_type",
                    models.CharField(
                        choices=[
                            ("size", "Por Tamaño"),
                            ("industry", "Por Actividad Económica"),
                            ("tax_regime", "Por Régimen Tributario"),
                            ("revenue", "Por Ingresos"),
                            ("custom", "Personalizado"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Segmento",
                    ),
                ),
                (
                    "criteria",
                    models.JSONField(
                        default=dict,
                        help_text="Criterios de segmentación en formato JSON. Ejemplo: {'size': {'min_employees': 10, 'max_employees': 50}, 'tax_regime': ['14A', '14B']}",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_by",
                    models.CharField(
                        help_text="Email del usuario creador", max_length=255
                    ),
                ),
            ],
            options={
                "verbose_name": "Segmento de Empresas",
                "verbose_name_plural": "Segmentos de Empresas",
                "db_table": "company_segments",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProcessTemplateConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=255, verbose_name="Nombre de la Plantilla"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "process_type",
                    models.CharField(
                        choices=[
                            ("tax_monthly", "Declaración Mensual"),
                            ("tax_annual", "Declaración Anual"),
                            ("document_sync", "Sincronización Documentos"),
                            ("sii_integration", "Integración SII"),
                            ("custom", "Personalizado"),
                        ],
                        max_length=50,
                        verbose_name="Tipo de Proceso",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("inactive", "Inactivo"),
                            ("testing", "En Pruebas"),
                        ],
                        default="active",
                        max_length=10,
                        verbose_name="Estado",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "default_recurrence_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("monthly", "Mensual"),
                            ("quarterly", "Trimestral"),
                            ("annual", "Anual"),
                            ("custom", "Personalizado"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Recurrencia por Defecto",
                    ),
                ),
                (
                    "default_recurrence_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuración de recurrencia por defecto para procesos creados con esta plantilla",
                        verbose_name="Configuración de Recurrencia",
                    ),
                ),
                (
                    "template_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración completa de la plantilla: estructura, variables, valores por defecto",
                        verbose_name="Configuración de la Plantilla",
                    ),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de variables que pueden ser usadas en esta plantilla",
                        verbose_name="Variables Disponibles",
                    ),
                ),
                (
                    "default_values",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Valores por defecto para las variables de la plantilla",
                        verbose_name="Valores por Defecto",
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(default=0, verbose_name="Veces Utilizado"),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último Uso"
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        help_text="Email del usuario creador", max_length=255
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Plantilla de Proceso",
                "verbose_name_plural": "Configuraciones de Plantillas de Procesos",
                "db_table": "process_template_configs",
                "ordering": ["process_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProcessTemplateTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "task_title",
                    models.CharField(max_length=255, verbose_name="Título de la Tarea"),
                ),
                (
                    "task_description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("automatic", "Automática"),
                            ("scheduled", "Programada"),
                            ("recurring", "Recurrente"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="Tipo de Tarea",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baja"),
                            ("normal", "Normal"),
                            ("high", "Alta"),
                            ("urgent", "Urgente"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "execution_order",
                    models.IntegerField(default=0, verbose_name="Orden de Ejecución"),
                ),
                (
                    "is_optional",
                    models.BooleanField(default=False, verbose_name="Es Opcional"),
                ),
                (
                    "can_run_parallel",
                    models.BooleanField(
                        default=False, verbose_name="Puede Ejecutarse en Paralelo"
                    ),
                ),
                (
                    "due_date_offset_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Días desde el inicio del proceso para calcular fecha límite",
                        null=True,
                        verbose_name="Días de Plazo",
                    ),
                ),
                (
                    "due_date_from_previous",
                    models.IntegerField(
                        blank=True,
                        help_text="Días desde completación de tarea anterior",
                        null=True,
                        verbose_name="Días desde Tarea Anterior",
                    ),
                ),
                (
                    "estimated_hours",
                    models.IntegerField(
                        blank=True,
                        help_text="Duración estimada en horas",
                        null=True,
                        verbose_name="Horas Estimadas",
                    ),
                ),
                (
                    "task_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuración específica de la tarea",
                        verbose_name="Configuración de la Tarea",
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        related_name="dependent_tasks",
                        to="tasks.processtemplatetask",
                        verbose_name="Depende de",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template_tasks",
                        to="tasks.processtemplateconfig",
                        verbose_name="Plantilla",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarea de Plantilla",
                "verbose_name_plural": "Tareas de Plantilla",
                "db_table": "process_template_tasks",
                "ordering": ["template", "execution_order"],
                "unique_together": {("template", "execution_order")},
            },
        ),
        migrations.CreateModel(
            name="ProcessAssignmentRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "conditions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Condiciones específicas adicionales a los criterios del segmento",
                        verbose_name="Condiciones Adicionales",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Orden de aplicación (mayor número = mayor prioridad)",
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Inicio"
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Fin"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "auto_apply",
                    models.BooleanField(
                        default=True,
                        help_text="Si se debe aplicar automáticamente cuando una empresa cumple los criterios",
                        verbose_name="Aplicar Automáticamente",
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        help_text="Email del usuario creador", max_length=255
                    ),
                ),
                (
                    "segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignment_rules",
                        to="tasks.companysegment",
                        verbose_name="Segmento",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignment_rules",
                        to="tasks.processtemplateconfig",
                        verbose_name="Plantilla",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regla de Asignación de Procesos",
                "verbose_name_plural": "Reglas de Asignación de Procesos",
                "db_table": "process_assignment_rules",
                "ordering": ["-priority", "template", "segment"],
                "unique_together": {("template", "segment")},
            },
        ),
    ]
