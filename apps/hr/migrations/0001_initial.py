# Generated by Django 4.2.11 on 2025-09-26 14:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0002_backgroundtasktracker"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tax_id",
                    models.CharField(
                        help_text="Employee RUT with format XX.XXX.XXX-X",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="RUT must be in format XX.XXX.XXX-X",
                                regex="^\\d{1,2}\\.\\d{3}\\.\\d{3}-[\\dkK]$",
                            )
                        ],
                    ),
                ),
                (
                    "first_name",
                    models.CharField(help_text="Employee first name", max_length=100),
                ),
                (
                    "last_name",
                    models.CharField(help_text="Employee last name", max_length=100),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Employee email address", max_length=254, unique=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=20
                    ),
                ),
                (
                    "mobile_phone",
                    models.CharField(
                        blank=True, help_text="Mobile phone number", max_length=20
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, help_text="Employee address", max_length=255
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City", max_length=100),
                ),
                (
                    "region",
                    models.CharField(blank=True, help_text="Region", max_length=100),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, help_text="Postal code", max_length=10
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, help_text="Date of birth", null=True),
                ),
                (
                    "nationality",
                    models.CharField(
                        default="Chilean", help_text="Nationality", max_length=50
                    ),
                ),
                (
                    "civil_status",
                    models.CharField(
                        choices=[
                            ("SINGLE", "Single"),
                            ("MARRIED", "Married"),
                            ("DIVORCED", "Divorced"),
                            ("WIDOWED", "Widowed"),
                            ("SEPARATED", "Separated"),
                        ],
                        default="SINGLE",
                        help_text="Civil status",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is employee currently active"
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(help_text="Date when employee was hired"),
                ),
                (
                    "termination_date",
                    models.DateField(
                        blank=True, help_text="Date when employment ended", null=True
                    ),
                ),
                (
                    "termination_reason",
                    models.TextField(blank=True, help_text="Reason for termination"),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        help_text="Bank name for salary payments",
                        max_length=100,
                    ),
                ),
                (
                    "bank_account_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CHECKING", "Checking Account"),
                            ("SAVINGS", "Savings Account"),
                        ],
                        help_text="Type of bank account",
                        max_length=20,
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(
                        blank=True, help_text="Bank account number", max_length=50
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        blank=True, help_text="Emergency contact name", max_length=200
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True, help_text="Emergency contact phone", max_length=20
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(
                        blank=True, help_text="Relationship to employee", max_length=50
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Company the employee works for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employees",
                        to="companies.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee",
                "verbose_name_plural": "Employees",
                "db_table": "hr_employees",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="EmployeeContract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contract_number",
                    models.CharField(
                        help_text="Unique contract number", max_length=50, unique=True
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("INDEFINITE", "Indefinite Term"),
                            ("FIXED_TERM", "Fixed Term"),
                            ("PROJECT", "Project-based"),
                            ("TEMPORARY", "Temporary"),
                            ("INTERNSHIP", "Internship"),
                            ("PART_TIME", "Part Time"),
                        ],
                        help_text="Type of employment contract",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(help_text="Contract start date")),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Contract end date (for fixed-term contracts)",
                        null=True,
                    ),
                ),
                (
                    "job_title",
                    models.CharField(help_text="Employee job title", max_length=200),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department or area", max_length=100
                    ),
                ),
                (
                    "base_salary",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base salary amount in CLP",
                        max_digits=12,
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("MONTHLY", "Monthly"),
                            ("BIWEEKLY", "Bi-weekly"),
                            ("WEEKLY", "Weekly"),
                            ("DAILY", "Daily"),
                            ("HOURLY", "Hourly"),
                        ],
                        default="MONTHLY",
                        help_text="How often the employee is paid",
                        max_length=20,
                    ),
                ),
                (
                    "taxable_income",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monthly taxable income (base imponible) in CLP",
                        max_digits=12,
                    ),
                ),
                (
                    "weekly_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=45.0,
                        help_text="Weekly working hours",
                        max_digits=5,
                    ),
                ),
                (
                    "work_schedule",
                    models.TextField(
                        blank=True,
                        help_text="Description of work schedule (e.g., Monday to Friday 9:00-18:00)",
                    ),
                ),
                (
                    "transportation_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Monthly transportation allowance in CLP",
                        max_digits=10,
                    ),
                ),
                (
                    "meal_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Monthly meal allowance in CLP",
                        max_digits=10,
                    ),
                ),
                (
                    "family_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Monthly family allowance in CLP",
                        max_digits=10,
                    ),
                ),
                (
                    "other_allowances",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Other allowances and benefits",
                    ),
                ),
                (
                    "pension_system",
                    models.CharField(
                        choices=[
                            ("AFP", "AFP (Private Pension System)"),
                            ("INP", "INP (Public Pension System)"),
                        ],
                        default="AFP",
                        help_text="Pension system",
                        max_length=20,
                    ),
                ),
                (
                    "afp_name",
                    models.CharField(
                        blank=True, help_text="AFP name (if applicable)", max_length=100
                    ),
                ),
                (
                    "health_system",
                    models.CharField(
                        choices=[
                            ("FONASA", "FONASA (Public Health)"),
                            ("ISAPRE", "ISAPRE (Private Health)"),
                        ],
                        default="FONASA",
                        help_text="Health system",
                        max_length=20,
                    ),
                ),
                (
                    "isapre_name",
                    models.CharField(
                        blank=True,
                        help_text="ISAPRE name (if applicable)",
                        max_length=100,
                    ),
                ),
                (
                    "health_plan_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Monthly health plan value in CLP",
                        max_digits=10,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this contract currently active"
                    ),
                ),
                (
                    "probation_period_months",
                    models.IntegerField(
                        default=3, help_text="Probation period in months"
                    ),
                ),
                (
                    "vacation_days_per_year",
                    models.IntegerField(
                        default=15,
                        help_text="Annual vacation days (legal minimum is 15 working days)",
                    ),
                ),
                (
                    "notice_period_days",
                    models.IntegerField(
                        default=30,
                        help_text="Notice period required for termination in days",
                    ),
                ),
                (
                    "contract_notes",
                    models.TextField(
                        blank=True, help_text="Additional contract terms and notes"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        help_text="Employee this contract belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to="hr.employee",
                    ),
                ),
                (
                    "reporting_manager",
                    models.ForeignKey(
                        blank=True,
                        help_text="Direct manager/supervisor",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="direct_reports",
                        to="hr.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee Contract",
                "verbose_name_plural": "Employee Contracts",
                "db_table": "hr_employee_contracts",
                "ordering": ["-start_date"],
                "indexes": [
                    models.Index(
                        fields=["employee", "is_active"],
                        name="hr_employee_employe_916eb6_idx",
                    ),
                    models.Index(
                        fields=["contract_type"], name="hr_employee_contrac_87530f_idx"
                    ),
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="hr_employee_start_d_664ab9_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["company", "is_active"], name="hr_employee_company_3e90bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["tax_id"], name="hr_employee_tax_id_d2a398_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["email"], name="hr_employee_email_3e0189_idx"),
        ),
    ]
